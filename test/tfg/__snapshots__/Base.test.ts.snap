// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Base 1`] = `
Object {
  "required_version": "= 0.12",
}
`;

exports[`Base 2`] = `
Array [
  Backend {
    "blockNames": Array [
      "s3",
    ],
    "blockType": "backend",
    "type": "s3",
  },
  Provider {
    "blockNames": Array [
      "aws",
    ],
    "blockType": "provider",
    "type": "aws",
  },
  Resource {
    "blockNames": Array [
      "aws_vpc",
      "vpc",
    ],
    "blockType": "resource",
    "name": "vpc",
    "type": "aws_vpc",
  },
  Resource {
    "blockNames": Array [
      "aws_subnet",
      "public0",
    ],
    "blockType": "resource",
    "name": "public0",
    "type": "aws_subnet",
  },
  Resource {
    "blockNames": Array [
      "aws_subnet",
      "public1",
    ],
    "blockType": "resource",
    "name": "public1",
    "type": "aws_subnet",
  },
  Resource {
    "blockNames": Array [
      "aws_subnet",
      "public2",
    ],
    "blockType": "resource",
    "name": "public2",
    "type": "aws_subnet",
  },
  Resource {
    "blockNames": Array [
      "aws_subnet",
      "web0",
    ],
    "blockType": "resource",
    "name": "web0",
    "type": "aws_subnet",
  },
  Resource {
    "blockNames": Array [
      "aws_subnet",
      "web1",
    ],
    "blockType": "resource",
    "name": "web1",
    "type": "aws_subnet",
  },
  Resource {
    "blockNames": Array [
      "aws_subnet",
      "web2",
    ],
    "blockType": "resource",
    "name": "web2",
    "type": "aws_subnet",
  },
  Resource {
    "blockNames": Array [
      "aws_subnet",
      "app0",
    ],
    "blockType": "resource",
    "name": "app0",
    "type": "aws_subnet",
  },
  Resource {
    "blockNames": Array [
      "aws_subnet",
      "app1",
    ],
    "blockType": "resource",
    "name": "app1",
    "type": "aws_subnet",
  },
  Resource {
    "blockNames": Array [
      "aws_subnet",
      "app2",
    ],
    "blockType": "resource",
    "name": "app2",
    "type": "aws_subnet",
  },
  Resource {
    "blockNames": Array [
      "aws_subnet",
      "gut0",
    ],
    "blockType": "resource",
    "name": "gut0",
    "type": "aws_subnet",
  },
  Resource {
    "blockNames": Array [
      "aws_subnet",
      "gut1",
    ],
    "blockType": "resource",
    "name": "gut1",
    "type": "aws_subnet",
  },
  Resource {
    "blockNames": Array [
      "aws_subnet",
      "gut2",
    ],
    "blockType": "resource",
    "name": "gut2",
    "type": "aws_subnet",
  },
  Resource {
    "blockNames": Array [
      "aws_subnet",
      "db0",
    ],
    "blockType": "resource",
    "name": "db0",
    "type": "aws_subnet",
  },
  Resource {
    "blockNames": Array [
      "aws_subnet",
      "db1",
    ],
    "blockType": "resource",
    "name": "db1",
    "type": "aws_subnet",
  },
  Resource {
    "blockNames": Array [
      "aws_subnet",
      "db2",
    ],
    "blockType": "resource",
    "name": "db2",
    "type": "aws_subnet",
  },
  Resource {
    "blockNames": Array [
      "aws_internet_gateway",
      "igw",
    ],
    "blockType": "resource",
    "name": "igw",
    "type": "aws_internet_gateway",
  },
  Resource {
    "blockNames": Array [
      "aws_route_table",
      "default",
    ],
    "blockType": "resource",
    "name": "default",
    "type": "aws_route_table",
  },
  Resource {
    "blockNames": Array [
      "aws_route_table",
      "igw",
    ],
    "blockType": "resource",
    "name": "igw",
    "type": "aws_route_table",
  },
  Resource {
    "blockNames": Array [
      "aws_route_table_association",
      "default-web0",
    ],
    "blockType": "resource",
    "name": "default-web0",
    "type": "aws_route_table_association",
  },
  Resource {
    "blockNames": Array [
      "aws_route_table_association",
      "default-web1",
    ],
    "blockType": "resource",
    "name": "default-web1",
    "type": "aws_route_table_association",
  },
  Resource {
    "blockNames": Array [
      "aws_route_table_association",
      "default-web2",
    ],
    "blockType": "resource",
    "name": "default-web2",
    "type": "aws_route_table_association",
  },
  Resource {
    "blockNames": Array [
      "aws_route_table_association",
      "default-app0",
    ],
    "blockType": "resource",
    "name": "default-app0",
    "type": "aws_route_table_association",
  },
  Resource {
    "blockNames": Array [
      "aws_route_table_association",
      "default-app1",
    ],
    "blockType": "resource",
    "name": "default-app1",
    "type": "aws_route_table_association",
  },
  Resource {
    "blockNames": Array [
      "aws_route_table_association",
      "default-app2",
    ],
    "blockType": "resource",
    "name": "default-app2",
    "type": "aws_route_table_association",
  },
  Resource {
    "blockNames": Array [
      "aws_route_table_association",
      "default-gut0",
    ],
    "blockType": "resource",
    "name": "default-gut0",
    "type": "aws_route_table_association",
  },
  Resource {
    "blockNames": Array [
      "aws_route_table_association",
      "default-gut1",
    ],
    "blockType": "resource",
    "name": "default-gut1",
    "type": "aws_route_table_association",
  },
  Resource {
    "blockNames": Array [
      "aws_route_table_association",
      "default-gut2",
    ],
    "blockType": "resource",
    "name": "default-gut2",
    "type": "aws_route_table_association",
  },
  Resource {
    "blockNames": Array [
      "aws_route_table_association",
      "default-db0",
    ],
    "blockType": "resource",
    "name": "default-db0",
    "type": "aws_route_table_association",
  },
  Resource {
    "blockNames": Array [
      "aws_route_table_association",
      "default-db1",
    ],
    "blockType": "resource",
    "name": "default-db1",
    "type": "aws_route_table_association",
  },
  Resource {
    "blockNames": Array [
      "aws_route_table_association",
      "default-db2",
    ],
    "blockType": "resource",
    "name": "default-db2",
    "type": "aws_route_table_association",
  },
  Resource {
    "blockNames": Array [
      "aws_route_table_association",
      "igw-public0",
    ],
    "blockType": "resource",
    "name": "igw-public0",
    "type": "aws_route_table_association",
  },
  Resource {
    "blockNames": Array [
      "aws_route_table_association",
      "igw-public1",
    ],
    "blockType": "resource",
    "name": "igw-public1",
    "type": "aws_route_table_association",
  },
  Resource {
    "blockNames": Array [
      "aws_route_table_association",
      "igw-public2",
    ],
    "blockType": "resource",
    "name": "igw-public2",
    "type": "aws_route_table_association",
  },
  Resource {
    "blockNames": Array [
      "aws_network_acl",
      "default",
    ],
    "blockType": "resource",
    "name": "default",
    "type": "aws_network_acl",
  },
  Resource {
    "blockNames": Array [
      "aws_network_acl",
      "db",
    ],
    "blockType": "resource",
    "name": "db",
    "type": "aws_network_acl",
  },
  Resource {
    "blockNames": Array [
      "aws_security_group",
      "public-default",
    ],
    "blockType": "resource",
    "name": "public-default",
    "type": "aws_security_group",
  },
  Resource {
    "blockNames": Array [
      "aws_security_group",
      "web-default",
    ],
    "blockType": "resource",
    "name": "web-default",
    "type": "aws_security_group",
  },
  Resource {
    "blockNames": Array [
      "aws_security_group",
      "app-default",
    ],
    "blockType": "resource",
    "name": "app-default",
    "type": "aws_security_group",
  },
  Resource {
    "blockNames": Array [
      "aws_security_group",
      "gut-default",
    ],
    "blockType": "resource",
    "name": "gut-default",
    "type": "aws_security_group",
  },
  Resource {
    "blockNames": Array [
      "aws_security_group",
      "db-default",
    ],
    "blockType": "resource",
    "name": "db-default",
    "type": "aws_security_group",
  },
  Resource {
    "blockNames": Array [
      "aws_eip",
      "nat",
    ],
    "blockType": "resource",
    "name": "nat",
    "type": "aws_eip",
  },
  Resource {
    "blockNames": Array [
      "aws_nat_gateway",
      "nat",
    ],
    "blockType": "resource",
    "name": "nat",
    "type": "aws_nat_gateway",
  },
  Resource {
    "blockNames": Array [
      "aws_route_table",
      "nat",
    ],
    "blockType": "resource",
    "name": "nat",
    "type": "aws_route_table",
  },
  Resource {
    "blockNames": Array [
      "aws_route_table_association",
      "nat-gut0",
    ],
    "blockType": "resource",
    "name": "nat-gut0",
    "type": "aws_route_table_association",
  },
  Resource {
    "blockNames": Array [
      "aws_route_table_association",
      "nat-gut1",
    ],
    "blockType": "resource",
    "name": "nat-gut1",
    "type": "aws_route_table_association",
  },
  Resource {
    "blockNames": Array [
      "aws_route_table_association",
      "nat-gut2",
    ],
    "blockType": "resource",
    "name": "nat-gut2",
    "type": "aws_route_table_association",
  },
  Output {
    "blockNames": Array [
      "vpc",
    ],
    "blockType": "output",
    "name": "vpc",
  },
  Output {
    "blockNames": Array [
      "subnets",
    ],
    "blockType": "output",
    "name": "subnets",
  },
]
`;

exports[`Base 3`] = `Object {}`;

exports[`Base 4`] = `
Object {
  "tf": "terraform {
required_version = \\"= 0.12\\"
backend \\"s3\\"{
bucket = \\"mybucket\\"
key = \\"path/to/my/key\\"
region = \\"ap-southeast-1\\"
}

}

provider \\"aws\\"{
region = \\"ap-southeast-1\\"
profile = \\"test\\"
}

resource \\"aws_vpc\\" \\"vpc\\"{
cidr_block = \\"172.88.0.0/16\\"
tags = {
Name = \\"vpc-test-dev\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_subnet\\" \\"public0\\"{
vpc_id = aws_vpc.vpc.id
cidr_block = \\"172.88.100.0/24\\"
availability_zone = \\"ap-southeast-1a\\"
tags = {
Name = \\"subnet-test-dev-public0\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_subnet\\" \\"public1\\"{
vpc_id = aws_vpc.vpc.id
cidr_block = \\"172.88.101.0/24\\"
availability_zone = \\"ap-southeast-1b\\"
tags = {
Name = \\"subnet-test-dev-public1\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_subnet\\" \\"public2\\"{
vpc_id = aws_vpc.vpc.id
cidr_block = \\"172.88.102.0/24\\"
availability_zone = \\"ap-southeast-1c\\"
tags = {
Name = \\"subnet-test-dev-public2\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_subnet\\" \\"web0\\"{
vpc_id = aws_vpc.vpc.id
cidr_block = \\"172.88.104.0/24\\"
availability_zone = \\"ap-southeast-1a\\"
tags = {
Name = \\"subnet-test-dev-web0\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_subnet\\" \\"web1\\"{
vpc_id = aws_vpc.vpc.id
cidr_block = \\"172.88.105.0/24\\"
availability_zone = \\"ap-southeast-1b\\"
tags = {
Name = \\"subnet-test-dev-web1\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_subnet\\" \\"web2\\"{
vpc_id = aws_vpc.vpc.id
cidr_block = \\"172.88.106.0/24\\"
availability_zone = \\"ap-southeast-1c\\"
tags = {
Name = \\"subnet-test-dev-web2\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_subnet\\" \\"app0\\"{
vpc_id = aws_vpc.vpc.id
cidr_block = \\"172.88.108.0/24\\"
availability_zone = \\"ap-southeast-1a\\"
tags = {
Name = \\"subnet-test-dev-app0\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_subnet\\" \\"app1\\"{
vpc_id = aws_vpc.vpc.id
cidr_block = \\"172.88.109.0/24\\"
availability_zone = \\"ap-southeast-1b\\"
tags = {
Name = \\"subnet-test-dev-app1\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_subnet\\" \\"app2\\"{
vpc_id = aws_vpc.vpc.id
cidr_block = \\"172.88.110.0/24\\"
availability_zone = \\"ap-southeast-1c\\"
tags = {
Name = \\"subnet-test-dev-app2\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_subnet\\" \\"gut0\\"{
vpc_id = aws_vpc.vpc.id
cidr_block = \\"172.88.112.0/24\\"
availability_zone = \\"ap-southeast-1a\\"
tags = {
Name = \\"subnet-test-dev-gut0\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_subnet\\" \\"gut1\\"{
vpc_id = aws_vpc.vpc.id
cidr_block = \\"172.88.113.0/24\\"
availability_zone = \\"ap-southeast-1b\\"
tags = {
Name = \\"subnet-test-dev-gut1\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_subnet\\" \\"gut2\\"{
vpc_id = aws_vpc.vpc.id
cidr_block = \\"172.88.114.0/24\\"
availability_zone = \\"ap-southeast-1c\\"
tags = {
Name = \\"subnet-test-dev-gut2\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_subnet\\" \\"db0\\"{
vpc_id = aws_vpc.vpc.id
cidr_block = \\"172.88.116.0/24\\"
availability_zone = \\"ap-southeast-1a\\"
tags = {
Name = \\"subnet-test-dev-db0\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_subnet\\" \\"db1\\"{
vpc_id = aws_vpc.vpc.id
cidr_block = \\"172.88.117.0/24\\"
availability_zone = \\"ap-southeast-1b\\"
tags = {
Name = \\"subnet-test-dev-db1\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_subnet\\" \\"db2\\"{
vpc_id = aws_vpc.vpc.id
cidr_block = \\"172.88.118.0/24\\"
availability_zone = \\"ap-southeast-1c\\"
tags = {
Name = \\"subnet-test-dev-db2\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_internet_gateway\\" \\"igw\\"{
vpc_id = aws_vpc.vpc.id
tags = {
Name = \\"igw-test-dev\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_route_table\\" \\"default\\"{
vpc_id = aws_vpc.vpc.id
tags = {
Name = \\"rt-test-dev-default\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_route_table\\" \\"igw\\"{
vpc_id = aws_vpc.vpc.id
route {
cidr_block = \\"0.0.0.0/0\\"
gateway_id = aws_internet_gateway.igw.id
}
tags = {
Name = \\"rt-test-dev-igw\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_route_table_association\\" \\"default-web0\\"{
subnet_id = aws_subnet.web0.id
route_table_id = aws_route_table.default.id
}

resource \\"aws_route_table_association\\" \\"default-web1\\"{
subnet_id = aws_subnet.web1.id
route_table_id = aws_route_table.default.id
}

resource \\"aws_route_table_association\\" \\"default-web2\\"{
subnet_id = aws_subnet.web2.id
route_table_id = aws_route_table.default.id
}

resource \\"aws_route_table_association\\" \\"default-app0\\"{
subnet_id = aws_subnet.app0.id
route_table_id = aws_route_table.default.id
}

resource \\"aws_route_table_association\\" \\"default-app1\\"{
subnet_id = aws_subnet.app1.id
route_table_id = aws_route_table.default.id
}

resource \\"aws_route_table_association\\" \\"default-app2\\"{
subnet_id = aws_subnet.app2.id
route_table_id = aws_route_table.default.id
}

resource \\"aws_route_table_association\\" \\"default-gut0\\"{
subnet_id = aws_subnet.gut0.id
route_table_id = aws_route_table.default.id
}

resource \\"aws_route_table_association\\" \\"default-gut1\\"{
subnet_id = aws_subnet.gut1.id
route_table_id = aws_route_table.default.id
}

resource \\"aws_route_table_association\\" \\"default-gut2\\"{
subnet_id = aws_subnet.gut2.id
route_table_id = aws_route_table.default.id
}

resource \\"aws_route_table_association\\" \\"default-db0\\"{
subnet_id = aws_subnet.db0.id
route_table_id = aws_route_table.default.id
}

resource \\"aws_route_table_association\\" \\"default-db1\\"{
subnet_id = aws_subnet.db1.id
route_table_id = aws_route_table.default.id
}

resource \\"aws_route_table_association\\" \\"default-db2\\"{
subnet_id = aws_subnet.db2.id
route_table_id = aws_route_table.default.id
}

resource \\"aws_route_table_association\\" \\"igw-public0\\"{
subnet_id = aws_subnet.public0.id
route_table_id = aws_route_table.igw.id
}

resource \\"aws_route_table_association\\" \\"igw-public1\\"{
subnet_id = aws_subnet.public1.id
route_table_id = aws_route_table.igw.id
}

resource \\"aws_route_table_association\\" \\"igw-public2\\"{
subnet_id = aws_subnet.public2.id
route_table_id = aws_route_table.igw.id
}

resource \\"aws_network_acl\\" \\"default\\"{
vpc_id = aws_vpc.vpc.id
subnet_ids = [
aws_subnet.public0.id,
aws_subnet.public1.id,
aws_subnet.public2.id,
aws_subnet.web0.id,
aws_subnet.web1.id,
aws_subnet.web2.id,
aws_subnet.app0.id,
aws_subnet.app1.id,
aws_subnet.app2.id,
aws_subnet.gut0.id,
aws_subnet.gut1.id,
aws_subnet.gut2.id
]
ingress {
protocol = \\"all\\"
rule_no = 100
action = \\"allow\\"
cidr_block = \\"0.0.0.0/0\\"
from_port = 0
to_port = 0
}
egress {
protocol = \\"all\\"
rule_no = 100
action = \\"allow\\"
cidr_block = \\"0.0.0.0/0\\"
from_port = 0
to_port = 0
}
tags = {
Name = \\"nacl-test-dev-default\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_network_acl\\" \\"db\\"{
vpc_id = aws_vpc.vpc.id
subnet_ids = [
aws_subnet.db0.id,
aws_subnet.db1.id,
aws_subnet.db2.id
]
ingress {
protocol = \\"all\\"
rule_no = 100
action = \\"allow\\"
cidr_block = \\"172.88.108.0/22\\"
from_port = 0
to_port = 0
}
ingress {
protocol = \\"all\\"
rule_no = 110
action = \\"allow\\"
cidr_block = \\"172.88.116.0/22\\"
from_port = 0
to_port = 0
}
egress {
protocol = \\"all\\"
rule_no = 100
action = \\"allow\\"
cidr_block = \\"172.88.108.0/22\\"
from_port = 0
to_port = 0
}
egress {
protocol = \\"all\\"
rule_no = 110
action = \\"allow\\"
cidr_block = \\"172.88.116.0/22\\"
from_port = 0
to_port = 0
}
tags = {
Name = \\"nacl-test-dev-db\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_security_group\\" \\"public-default\\"{
name = \\"fw-public-default\\"
description = \\"Default for public tier\\"
vpc_id = aws_vpc.vpc.id
ingress {
protocol = \\"tcp\\"
from_port = 22
to_port = 22
cidr_blocks = [
\\"172.88.100.0/22\\"
]
description = \\"SSH for tier\\"
}
egress {
protocol = \\"-1\\"
from_port = 0
to_port = 0
cidr_blocks = [
\\"0.0.0.0/0\\"
]
}
tags = {
Name = \\"sg-test-dev-public-default\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_security_group\\" \\"web-default\\"{
name = \\"fw-web-default\\"
description = \\"Default for web tier\\"
vpc_id = aws_vpc.vpc.id
ingress {
protocol = \\"tcp\\"
from_port = 22
to_port = 22
cidr_blocks = [
\\"172.88.104.0/22\\"
]
description = \\"SSH for tier\\"
}
egress {
protocol = \\"-1\\"
from_port = 0
to_port = 0
cidr_blocks = [
\\"0.0.0.0/0\\"
]
}
tags = {
Name = \\"sg-test-dev-web-default\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_security_group\\" \\"app-default\\"{
name = \\"fw-app-default\\"
description = \\"Default for app tier\\"
vpc_id = aws_vpc.vpc.id
ingress {
protocol = \\"tcp\\"
from_port = 22
to_port = 22
cidr_blocks = [
\\"172.88.108.0/22\\"
]
description = \\"SSH for tier\\"
}
egress {
protocol = \\"-1\\"
from_port = 0
to_port = 0
cidr_blocks = [
\\"0.0.0.0/0\\"
]
}
tags = {
Name = \\"sg-test-dev-app-default\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_security_group\\" \\"gut-default\\"{
name = \\"fw-gut-default\\"
description = \\"Default for gut tier\\"
vpc_id = aws_vpc.vpc.id
ingress {
protocol = \\"tcp\\"
from_port = 22
to_port = 22
cidr_blocks = [
\\"172.88.112.0/22\\"
]
description = \\"SSH for tier\\"
}
egress {
protocol = \\"-1\\"
from_port = 0
to_port = 0
cidr_blocks = [
\\"0.0.0.0/0\\"
]
}
tags = {
Name = \\"sg-test-dev-gut-default\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_security_group\\" \\"db-default\\"{
name = \\"fw-db-default\\"
description = \\"Default for db tier\\"
vpc_id = aws_vpc.vpc.id
ingress {
protocol = \\"tcp\\"
from_port = 22
to_port = 22
cidr_blocks = [
\\"172.88.116.0/22\\"
]
description = \\"SSH for tier\\"
}
egress {
protocol = \\"-1\\"
from_port = 0
to_port = 0
cidr_blocks = [
\\"0.0.0.0/0\\"
]
}
tags = {
Name = \\"sg-test-dev-db-default\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_eip\\" \\"nat\\"{
vpc = true
tags = {
Name = \\"eip-test-dev-nat\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_nat_gateway\\" \\"nat\\"{
allocation_id = aws_eip.nat.id
subnet_id = aws_subnet.public0.id
tags = {
Name = \\"nat-test-dev\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_route_table\\" \\"nat\\"{
vpc_id = aws_vpc.vpc.id
route {
cidr_block = \\"0.0.0.0/0\\"
gateway_id = aws_nat_gateway.nat.id
}
tags = {
Name = \\"rt-test-dev-nat\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_route_table_association\\" \\"nat-gut0\\"{
subnet_id = aws_subnet.gut0.id
route_table_id = aws_route_table.nat.id
}

resource \\"aws_route_table_association\\" \\"nat-gut1\\"{
subnet_id = aws_subnet.gut1.id
route_table_id = aws_route_table.nat.id
}

resource \\"aws_route_table_association\\" \\"nat-gut2\\"{
subnet_id = aws_subnet.gut2.id
route_table_id = aws_route_table.nat.id
}

output \\"vpc\\"{
value = {
cidr = aws_vpc.vpc.cidr_block
}
}

output \\"subnets\\"{
value = {
publicSubnets = [
aws_subnet.public0.cidr_block,
aws_subnet.public1.cidr_block,
aws_subnet.public2.cidr_block
]
webSubnets = [
aws_subnet.web0.cidr_block,
aws_subnet.web1.cidr_block,
aws_subnet.web2.cidr_block
]
appSubnets = [
aws_subnet.app0.cidr_block,
aws_subnet.app1.cidr_block,
aws_subnet.app2.cidr_block
]
gutSubnets = [
aws_subnet.gut0.cidr_block,
aws_subnet.gut1.cidr_block,
aws_subnet.gut2.cidr_block
]
dbSubnets = [
aws_subnet.db0.cidr_block,
aws_subnet.db1.cidr_block,
aws_subnet.db2.cidr_block
]
}
}

",
  "tfvars": undefined,
}
`;

exports[`Base 5`] = `
"terraform {
required_version = \\"= 0.12\\"
backend \\"s3\\"{
bucket = \\"mybucket\\"
key = \\"path/to/my/key\\"
region = \\"ap-southeast-1\\"
}

}

provider \\"aws\\"{
region = \\"ap-southeast-1\\"
profile = \\"test\\"
}

resource \\"aws_vpc\\" \\"vpc\\"{
cidr_block = \\"172.88.0.0/16\\"
tags = {
Name = \\"vpc-test-dev\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_subnet\\" \\"public0\\"{
vpc_id = aws_vpc.vpc.id
cidr_block = \\"172.88.100.0/24\\"
availability_zone = \\"ap-southeast-1a\\"
tags = {
Name = \\"subnet-test-dev-public0\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_subnet\\" \\"public1\\"{
vpc_id = aws_vpc.vpc.id
cidr_block = \\"172.88.101.0/24\\"
availability_zone = \\"ap-southeast-1b\\"
tags = {
Name = \\"subnet-test-dev-public1\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_subnet\\" \\"public2\\"{
vpc_id = aws_vpc.vpc.id
cidr_block = \\"172.88.102.0/24\\"
availability_zone = \\"ap-southeast-1c\\"
tags = {
Name = \\"subnet-test-dev-public2\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_subnet\\" \\"web0\\"{
vpc_id = aws_vpc.vpc.id
cidr_block = \\"172.88.104.0/24\\"
availability_zone = \\"ap-southeast-1a\\"
tags = {
Name = \\"subnet-test-dev-web0\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_subnet\\" \\"web1\\"{
vpc_id = aws_vpc.vpc.id
cidr_block = \\"172.88.105.0/24\\"
availability_zone = \\"ap-southeast-1b\\"
tags = {
Name = \\"subnet-test-dev-web1\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_subnet\\" \\"web2\\"{
vpc_id = aws_vpc.vpc.id
cidr_block = \\"172.88.106.0/24\\"
availability_zone = \\"ap-southeast-1c\\"
tags = {
Name = \\"subnet-test-dev-web2\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_subnet\\" \\"app0\\"{
vpc_id = aws_vpc.vpc.id
cidr_block = \\"172.88.108.0/24\\"
availability_zone = \\"ap-southeast-1a\\"
tags = {
Name = \\"subnet-test-dev-app0\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_subnet\\" \\"app1\\"{
vpc_id = aws_vpc.vpc.id
cidr_block = \\"172.88.109.0/24\\"
availability_zone = \\"ap-southeast-1b\\"
tags = {
Name = \\"subnet-test-dev-app1\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_subnet\\" \\"app2\\"{
vpc_id = aws_vpc.vpc.id
cidr_block = \\"172.88.110.0/24\\"
availability_zone = \\"ap-southeast-1c\\"
tags = {
Name = \\"subnet-test-dev-app2\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_subnet\\" \\"gut0\\"{
vpc_id = aws_vpc.vpc.id
cidr_block = \\"172.88.112.0/24\\"
availability_zone = \\"ap-southeast-1a\\"
tags = {
Name = \\"subnet-test-dev-gut0\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_subnet\\" \\"gut1\\"{
vpc_id = aws_vpc.vpc.id
cidr_block = \\"172.88.113.0/24\\"
availability_zone = \\"ap-southeast-1b\\"
tags = {
Name = \\"subnet-test-dev-gut1\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_subnet\\" \\"gut2\\"{
vpc_id = aws_vpc.vpc.id
cidr_block = \\"172.88.114.0/24\\"
availability_zone = \\"ap-southeast-1c\\"
tags = {
Name = \\"subnet-test-dev-gut2\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_subnet\\" \\"db0\\"{
vpc_id = aws_vpc.vpc.id
cidr_block = \\"172.88.116.0/24\\"
availability_zone = \\"ap-southeast-1a\\"
tags = {
Name = \\"subnet-test-dev-db0\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_subnet\\" \\"db1\\"{
vpc_id = aws_vpc.vpc.id
cidr_block = \\"172.88.117.0/24\\"
availability_zone = \\"ap-southeast-1b\\"
tags = {
Name = \\"subnet-test-dev-db1\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_subnet\\" \\"db2\\"{
vpc_id = aws_vpc.vpc.id
cidr_block = \\"172.88.118.0/24\\"
availability_zone = \\"ap-southeast-1c\\"
tags = {
Name = \\"subnet-test-dev-db2\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_internet_gateway\\" \\"igw\\"{
vpc_id = aws_vpc.vpc.id
tags = {
Name = \\"igw-test-dev\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_route_table\\" \\"default\\"{
vpc_id = aws_vpc.vpc.id
tags = {
Name = \\"rt-test-dev-default\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_route_table\\" \\"igw\\"{
vpc_id = aws_vpc.vpc.id
route {
cidr_block = \\"0.0.0.0/0\\"
gateway_id = aws_internet_gateway.igw.id
}
tags = {
Name = \\"rt-test-dev-igw\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_route_table_association\\" \\"default-web0\\"{
subnet_id = aws_subnet.web0.id
route_table_id = aws_route_table.default.id
}

resource \\"aws_route_table_association\\" \\"default-web1\\"{
subnet_id = aws_subnet.web1.id
route_table_id = aws_route_table.default.id
}

resource \\"aws_route_table_association\\" \\"default-web2\\"{
subnet_id = aws_subnet.web2.id
route_table_id = aws_route_table.default.id
}

resource \\"aws_route_table_association\\" \\"default-app0\\"{
subnet_id = aws_subnet.app0.id
route_table_id = aws_route_table.default.id
}

resource \\"aws_route_table_association\\" \\"default-app1\\"{
subnet_id = aws_subnet.app1.id
route_table_id = aws_route_table.default.id
}

resource \\"aws_route_table_association\\" \\"default-app2\\"{
subnet_id = aws_subnet.app2.id
route_table_id = aws_route_table.default.id
}

resource \\"aws_route_table_association\\" \\"default-gut0\\"{
subnet_id = aws_subnet.gut0.id
route_table_id = aws_route_table.default.id
}

resource \\"aws_route_table_association\\" \\"default-gut1\\"{
subnet_id = aws_subnet.gut1.id
route_table_id = aws_route_table.default.id
}

resource \\"aws_route_table_association\\" \\"default-gut2\\"{
subnet_id = aws_subnet.gut2.id
route_table_id = aws_route_table.default.id
}

resource \\"aws_route_table_association\\" \\"default-db0\\"{
subnet_id = aws_subnet.db0.id
route_table_id = aws_route_table.default.id
}

resource \\"aws_route_table_association\\" \\"default-db1\\"{
subnet_id = aws_subnet.db1.id
route_table_id = aws_route_table.default.id
}

resource \\"aws_route_table_association\\" \\"default-db2\\"{
subnet_id = aws_subnet.db2.id
route_table_id = aws_route_table.default.id
}

resource \\"aws_route_table_association\\" \\"igw-public0\\"{
subnet_id = aws_subnet.public0.id
route_table_id = aws_route_table.igw.id
}

resource \\"aws_route_table_association\\" \\"igw-public1\\"{
subnet_id = aws_subnet.public1.id
route_table_id = aws_route_table.igw.id
}

resource \\"aws_route_table_association\\" \\"igw-public2\\"{
subnet_id = aws_subnet.public2.id
route_table_id = aws_route_table.igw.id
}

resource \\"aws_network_acl\\" \\"default\\"{
vpc_id = aws_vpc.vpc.id
subnet_ids = [
aws_subnet.public0.id,
aws_subnet.public1.id,
aws_subnet.public2.id,
aws_subnet.web0.id,
aws_subnet.web1.id,
aws_subnet.web2.id,
aws_subnet.app0.id,
aws_subnet.app1.id,
aws_subnet.app2.id,
aws_subnet.gut0.id,
aws_subnet.gut1.id,
aws_subnet.gut2.id
]
ingress {
protocol = \\"all\\"
rule_no = 100
action = \\"allow\\"
cidr_block = \\"0.0.0.0/0\\"
from_port = 0
to_port = 0
}
egress {
protocol = \\"all\\"
rule_no = 100
action = \\"allow\\"
cidr_block = \\"0.0.0.0/0\\"
from_port = 0
to_port = 0
}
tags = {
Name = \\"nacl-test-dev-default\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_network_acl\\" \\"db\\"{
vpc_id = aws_vpc.vpc.id
subnet_ids = [
aws_subnet.db0.id,
aws_subnet.db1.id,
aws_subnet.db2.id
]
ingress {
protocol = \\"all\\"
rule_no = 100
action = \\"allow\\"
cidr_block = \\"172.88.108.0/22\\"
from_port = 0
to_port = 0
}
ingress {
protocol = \\"all\\"
rule_no = 110
action = \\"allow\\"
cidr_block = \\"172.88.116.0/22\\"
from_port = 0
to_port = 0
}
egress {
protocol = \\"all\\"
rule_no = 100
action = \\"allow\\"
cidr_block = \\"172.88.108.0/22\\"
from_port = 0
to_port = 0
}
egress {
protocol = \\"all\\"
rule_no = 110
action = \\"allow\\"
cidr_block = \\"172.88.116.0/22\\"
from_port = 0
to_port = 0
}
tags = {
Name = \\"nacl-test-dev-db\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_security_group\\" \\"public-default\\"{
name = \\"fw-public-default\\"
description = \\"Default for public tier\\"
vpc_id = aws_vpc.vpc.id
ingress {
protocol = \\"tcp\\"
from_port = 22
to_port = 22
cidr_blocks = [
\\"172.88.100.0/22\\"
]
description = \\"SSH for tier\\"
}
egress {
protocol = \\"-1\\"
from_port = 0
to_port = 0
cidr_blocks = [
\\"0.0.0.0/0\\"
]
}
tags = {
Name = \\"sg-test-dev-public-default\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_security_group\\" \\"web-default\\"{
name = \\"fw-web-default\\"
description = \\"Default for web tier\\"
vpc_id = aws_vpc.vpc.id
ingress {
protocol = \\"tcp\\"
from_port = 22
to_port = 22
cidr_blocks = [
\\"172.88.104.0/22\\"
]
description = \\"SSH for tier\\"
}
egress {
protocol = \\"-1\\"
from_port = 0
to_port = 0
cidr_blocks = [
\\"0.0.0.0/0\\"
]
}
tags = {
Name = \\"sg-test-dev-web-default\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_security_group\\" \\"app-default\\"{
name = \\"fw-app-default\\"
description = \\"Default for app tier\\"
vpc_id = aws_vpc.vpc.id
ingress {
protocol = \\"tcp\\"
from_port = 22
to_port = 22
cidr_blocks = [
\\"172.88.108.0/22\\"
]
description = \\"SSH for tier\\"
}
egress {
protocol = \\"-1\\"
from_port = 0
to_port = 0
cidr_blocks = [
\\"0.0.0.0/0\\"
]
}
tags = {
Name = \\"sg-test-dev-app-default\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_security_group\\" \\"gut-default\\"{
name = \\"fw-gut-default\\"
description = \\"Default for gut tier\\"
vpc_id = aws_vpc.vpc.id
ingress {
protocol = \\"tcp\\"
from_port = 22
to_port = 22
cidr_blocks = [
\\"172.88.112.0/22\\"
]
description = \\"SSH for tier\\"
}
egress {
protocol = \\"-1\\"
from_port = 0
to_port = 0
cidr_blocks = [
\\"0.0.0.0/0\\"
]
}
tags = {
Name = \\"sg-test-dev-gut-default\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_security_group\\" \\"db-default\\"{
name = \\"fw-db-default\\"
description = \\"Default for db tier\\"
vpc_id = aws_vpc.vpc.id
ingress {
protocol = \\"tcp\\"
from_port = 22
to_port = 22
cidr_blocks = [
\\"172.88.116.0/22\\"
]
description = \\"SSH for tier\\"
}
egress {
protocol = \\"-1\\"
from_port = 0
to_port = 0
cidr_blocks = [
\\"0.0.0.0/0\\"
]
}
tags = {
Name = \\"sg-test-dev-db-default\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_eip\\" \\"nat\\"{
vpc = true
tags = {
Name = \\"eip-test-dev-nat\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_nat_gateway\\" \\"nat\\"{
allocation_id = aws_eip.nat.id
subnet_id = aws_subnet.public0.id
tags = {
Name = \\"nat-test-dev\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_route_table\\" \\"nat\\"{
vpc_id = aws_vpc.vpc.id
route {
cidr_block = \\"0.0.0.0/0\\"
gateway_id = aws_nat_gateway.nat.id
}
tags = {
Name = \\"rt-test-dev-nat\\"
Project = \\"test\\"
Env = \\"dev\\"
}
}

resource \\"aws_route_table_association\\" \\"nat-gut0\\"{
subnet_id = aws_subnet.gut0.id
route_table_id = aws_route_table.nat.id
}

resource \\"aws_route_table_association\\" \\"nat-gut1\\"{
subnet_id = aws_subnet.gut1.id
route_table_id = aws_route_table.nat.id
}

resource \\"aws_route_table_association\\" \\"nat-gut2\\"{
subnet_id = aws_subnet.gut2.id
route_table_id = aws_route_table.nat.id
}

output \\"vpc\\"{
value = {
cidr = aws_vpc.vpc.cidr_block
}
}

output \\"subnets\\"{
value = {
publicSubnets = [
aws_subnet.public0.cidr_block,
aws_subnet.public1.cidr_block,
aws_subnet.public2.cidr_block
]
webSubnets = [
aws_subnet.web0.cidr_block,
aws_subnet.web1.cidr_block,
aws_subnet.web2.cidr_block
]
appSubnets = [
aws_subnet.app0.cidr_block,
aws_subnet.app1.cidr_block,
aws_subnet.app2.cidr_block
]
gutSubnets = [
aws_subnet.gut0.cidr_block,
aws_subnet.gut1.cidr_block,
aws_subnet.gut2.cidr_block
]
dbSubnets = [
aws_subnet.db0.cidr_block,
aws_subnet.db1.cidr_block,
aws_subnet.db2.cidr_block
]
}
}

"
`;
